[1/11] Generating ../../image0.S
[2/11] Performing build step for 'bootloader'
[1/1] cd /home/mmhargous/esp/projects_tf/person_detection/build/bootloader/esp-idf/esptool_py && /home/mmhargous/esp/idf-tools/python_env/idf5.4_py3.10_env/bin/python /home/mmhargous/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/mmhargous/esp/projects_tf/person_detection/build/bootloader/bootloader.bin
Bootloader binary size 0x6f50 bytes. 0xb0 bytes (1%) free.
[3/9] Building ASM object esp-idf/static_images/CMakeFiles/__idf_static_images.dir/__/__/image0.S.obj
[4/9] Linking C static library esp-idf/static_images/libstatic_images.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable person_detection.elf
[7/9] Generating binary image from built executable
esptool.py v4.8.dev3
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/mmhargous/esp/projects_tf/person_detection/build/person_detection.bin
[8/9] cd /home/mmhargous/esp/projects_tf/person_detection/build/esp-idf/esptool_py && /home/mmhargous/esp/idf-tools/python_env/idf5.4_py3.10_env/bin/python /home/mmhargous/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/mmhargous/esp/projects_tf/person_detection/build/partition_table/partition-table.bin /home/mmhargous/esp/projects_tf/person_detection/build/person_detection.bin
person_detection.bin binary size 0xd36f0 bytes. Smallest app partition is 0x180000 bytes. 0xac910 bytes (45%) free.
[8/9] cd /home/mmhargous/esp/idf/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/mmhargous/esp/idf/esp-idf -D "SERIAL_TOOL=/home/mmhargous/esp/idf-tools/python_env/idf5.4_py3.10_env/bin/python;;/home/mmhargous/esp/idf/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/mmhargous/esp/projects_tf/person_detection/build -P /home/mmhargous/esp/idf/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 person_detection.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.dev3
Serial port /dev/ttyUSB0
Connecting.....
Chip is ESP32-D0WDQ6 (revision v1.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 08:f9:e0:c6:ae:84
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000e3fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 28496 bytes to 17355...
Writing at 0x00001000... (50 %)
Writing at 0x00007a47... (100 %)
Wrote 28496 bytes (17355 compressed) at 0x00001000 in 0.7 seconds (effective 341.0 kbit/s)...
Hash of data verified.
Compressed 866032 bytes to 633040...
Writing at 0x00010000... (2 %)
Writing at 0x0001cb83... (5 %)
Writing at 0x00020e93... (7 %)
Writing at 0x000251f5... (10 %)
Writing at 0x000295bf... (12 %)
Writing at 0x0002d9ce... (15 %)
Writing at 0x00031d97... (17 %)
Writing at 0x000360e1... (20 %)
Writing at 0x0003a74f... (23 %)
Writing at 0x0003f4fb... (25 %)
Writing at 0x000443b0... (28 %)
Writing at 0x00049100... (30 %)
Writing at 0x0004decf... (33 %)
Writing at 0x00052d8b... (35 %)
Writing at 0x00057b21... (38 %)
Writing at 0x0005cb47... (41 %)
Writing at 0x00061a69... (43 %)
Writing at 0x000668f7... (46 %)
Writing at 0x0006b89a... (48 %)
Writing at 0x0007075f... (51 %)
Writing at 0x0007565a... (53 %)
Writing at 0x0007a51c... (56 %)
Writing at 0x0007f2f4... (58 %)
Writing at 0x00083ca6... (61 %)
Writing at 0x0008829c... (64 %)
Writing at 0x0009040d... (66 %)
Writing at 0x00095eb5... (69 %)
Writing at 0x0009a1e2... (71 %)
Writing at 0x000a2f41... (74 %)
Writing at 0x000a830c... (76 %)
Writing at 0x000ad78a... (79 %)
Writing at 0x000b2830... (82 %)
Writing at 0x000b7a92... (84 %)
Writing at 0x000bd47d... (87 %)
Writing at 0x000c6215... (89 %)
Writing at 0x000ce2d7... (92 %)
Writing at 0x000d4809... (94 %)
Writing at 0x000da047... (97 %)
Writing at 0x000dfa3f... (100 %)
Wrote 866032 bytes (633040 compressed) at 0x00010000 in 14.3 seconds (effective 483.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.0 seconds (effective 661.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
