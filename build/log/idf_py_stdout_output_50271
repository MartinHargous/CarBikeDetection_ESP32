[1/11] Generating ../../image0.S
[2/11] Performing build step for 'bootloader'
[1/1] cd /home/mmhargous/esp/projects_tf/person_detection/build/bootloader/esp-idf/esptool_py && /home/mmhargous/esp/idf-tools/python_env/idf5.4_py3.10_env/bin/python /home/mmhargous/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/mmhargous/esp/projects_tf/person_detection/build/bootloader/bootloader.bin
Bootloader binary size 0x6f50 bytes. 0xb0 bytes (1%) free.
[3/9] Building ASM object esp-idf/static_images/CMakeFiles/__idf_static_images.dir/__/__/image0.S.obj
[4/9] Linking C static library esp-idf/static_images/libstatic_images.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable person_detection.elf
[7/9] Generating binary image from built executable
esptool.py v4.8.dev3
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/mmhargous/esp/projects_tf/person_detection/build/person_detection.bin
[8/9] cd /home/mmhargous/esp/projects_tf/person_detection/build/esp-idf/esptool_py && /home/mmhargous/esp/idf-tools/python_env/idf5.4_py3.10_env/bin/python /home/mmhargous/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/mmhargous/esp/projects_tf/person_detection/build/partition_table/partition-table.bin /home/mmhargous/esp/projects_tf/person_detection/build/person_detection.bin
person_detection.bin binary size 0xce5c0 bytes. Smallest app partition is 0x180000 bytes. 0xb1a40 bytes (46%) free.
[8/9] cd /home/mmhargous/esp/idf/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/mmhargous/esp/idf/esp-idf -D "SERIAL_TOOL=/home/mmhargous/esp/idf-tools/python_env/idf5.4_py3.10_env/bin/python;;/home/mmhargous/esp/idf/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/mmhargous/esp/projects_tf/person_detection/build -P /home/mmhargous/esp/idf/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 person_detection.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.dev3
Serial port /dev/ttyUSB0
Connecting...........
Chip is ESP32-D0WDQ6 (revision v1.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 08:f9:e0:c6:ae:84
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000defff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 28496 bytes to 17355...
Writing at 0x00001000... (50 %)
Writing at 0x00007a47... (100 %)
Wrote 28496 bytes (17355 compressed) at 0x00001000 in 0.7 seconds (effective 346.1 kbit/s)...
Hash of data verified.
Compressed 845248 bytes to 625401...
Writing at 0x00010000... (2 %)
Writing at 0x0001cb79... (5 %)
Writing at 0x00020e93... (7 %)
Writing at 0x000251f6... (10 %)
Writing at 0x000295c0... (12 %)
Writing at 0x0002d9ce... (15 %)
Writing at 0x00031d98... (17 %)
Writing at 0x000360e2... (20 %)
Writing at 0x0003a750... (23 %)
Writing at 0x0003f4fc... (25 %)
Writing at 0x000443b1... (28 %)
Writing at 0x00049101... (30 %)
Writing at 0x0004ded0... (33 %)
Writing at 0x00052d8c... (35 %)
Writing at 0x00057b22... (38 %)
Writing at 0x0005cb48... (41 %)
Writing at 0x00061a6a... (43 %)
Writing at 0x000668f8... (46 %)
Writing at 0x0006b89b... (48 %)
Writing at 0x00070760... (51 %)
Writing at 0x0007565b... (53 %)
Writing at 0x0007a51d... (56 %)
Writing at 0x0007f2f5... (58 %)
Writing at 0x00083ca7... (61 %)
Writing at 0x000882b5... (64 %)
Writing at 0x0008e786... (66 %)
Writing at 0x00092b97... (69 %)
Writing at 0x00099cce... (71 %)
Writing at 0x000a1412... (74 %)
Writing at 0x000a67d9... (76 %)
Writing at 0x000abdd9... (79 %)
Writing at 0x000b1083... (82 %)
Writing at 0x000b6215... (84 %)
Writing at 0x000bb743... (87 %)
Writing at 0x000c3394... (89 %)
Writing at 0x000cbf0a... (92 %)
Writing at 0x000d1fd7... (94 %)
Writing at 0x000d77cd... (97 %)
Writing at 0x000dd37d... (100 %)
Wrote 845248 bytes (625401 compressed) at 0x00010000 in 14.2 seconds (effective 477.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.0 seconds (effective 663.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
